// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/whatthefar/monorepo-toolkit/pkg/factory (interfaces: CIControllerFactory)

// Package mock_factory is a generated GoMock package.
package mock_factory

import (
	gomock "github.com/golang/mock/gomock"
	controller "github.com/whatthefar/monorepo-toolkit/pkg/interface/controller"
	reflect "reflect"
)

// MockCIControllerFactory is a mock of CIControllerFactory interface
type MockCIControllerFactory struct {
	ctrl     *gomock.Controller
	recorder *MockCIControllerFactoryMockRecorder
}

// MockCIControllerFactoryMockRecorder is the mock recorder for MockCIControllerFactory
type MockCIControllerFactoryMockRecorder struct {
	mock *MockCIControllerFactory
}

// NewMockCIControllerFactory creates a new mock instance
func NewMockCIControllerFactory(ctrl *gomock.Controller) *MockCIControllerFactory {
	mock := &MockCIControllerFactory{ctrl: ctrl}
	mock.recorder = &MockCIControllerFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCIControllerFactory) EXPECT() *MockCIControllerFactoryMockRecorder {
	return m.recorder
}

// New mocks base method
func (m *MockCIControllerFactory) New(arg0, arg1 string) (controller.CI, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "New", arg0, arg1)
	ret0, _ := ret[0].(controller.CI)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// New indicates an expected call of New
func (mr *MockCIControllerFactoryMockRecorder) New(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "New", reflect.TypeOf((*MockCIControllerFactory)(nil).New), arg0, arg1)
}
